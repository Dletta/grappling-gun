import { OctetString as AsnOctetString } from "asn1js";
import { BufferSourceConverter } from "pvtsutils";
export class OctetString extends ArrayBuffer {
    constructor(param) {
        if (typeof param === "number") {
            super(param);
        }
        else {
            if (BufferSourceConverter.isBufferSource(param)) {
                super(param.byteLength);
                const view = new Uint8Array(this);
                view.set(BufferSourceConverter.toUint8Array(param));
            }
            else if (Array.isArray(param)) {
                var array = new Uint8Array(param);
                super(array.length);
                var view = new Uint8Array(this);
                view.set(array);
            }
            else {
                super(0);
            }
        }
    }
    fromASN(asn) {
        if (!(asn instanceof AsnOctetString)) {
            throw new TypeError("Argument 'asn' is not instance of ASN.1 OctetString");
        }
        return new OctetString(asn.valueBlock.valueHex);
    }
    toASN() {
        return new AsnOctetString({ valueHex: this });
    }
    toSchema(name) {
        return new AsnOctetString({ name });
    }
}
